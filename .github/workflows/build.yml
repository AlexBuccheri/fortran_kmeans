name: CI
on: [push, pull_request]

env:
  CI: "ON"
  HOMEBREW_NO_ANALYTICS: "ON"
  HOMEBREW_NO_AUTO_UPDATE: "ON"
  HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: "ON"
  HOMEBREW_NO_GITHUB_API: "ON"
  HOMEBREW_NO_INSTALL_CLEANUP: "ON"

jobs:
  mac-mpi-build:
    name: macOS MPI Build
    runs-on: macos-latest
    strategy:
      matrix:
        version: [13]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install GCC
        run: |
          brew install gcc@${{ matrix.version }} openblas pkg-config open-mpi
          ln -s /usr/local/bin/gfortran-${{ matrix.version }} /usr/local/bin/gfortran
          ln -s /usr/local/bin/gcc-${{ matrix.version }} /usr/local/bin/gcc
          ln -s /usr/local/bin/g++-${{ matrix.version }} /usr/local/bin/g++
          echo "PKG_CONFIG_PATH=/usr/local/opt/openblas/lib/pkgconfig" >> $GITHUB_ENV
          # Crashes  with  xcversion: command not found
          #xcversion select 14.1

      - name: Install cmake
        run: pip3 install cmake

      - name: Install Python Packages
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # Install from requirements as there is not a python project present
          pip install -r requirements.txt

      - name: Set Compiler
        run: |
          echo "FC=gfortran-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV

      - name: Configure project with MPI
        run: cmake --fresh -B cmake-build-debug -DCMAKE_BUILD_TYPE=Debug -DMPI=On
      
      - name: Build project
        run: cmake --build cmake-build-debug

      - name: Run ctest
        run: ctest --test-dir ./cmake-build-debug --output-on-failure

      - name: Run Jupyter tests
        run: jupyter nbconvert --execute  jupyter/kmeans.ipynb --to markdown
        
  mac-serial-build:
    name: macOS Serial Build
    runs-on: macos-latest
    strategy:
      matrix:
        version: [13]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install GCC
        run: |
          brew install gcc@${{ matrix.version }} openblas pkg-config
          ln -s /usr/local/bin/gfortran-${{ matrix.version }} /usr/local/bin/gfortran
          ln -s /usr/local/bin/gcc-${{ matrix.version }} /usr/local/bin/gcc
          ln -s /usr/local/bin/g++-${{ matrix.version }} /usr/local/bin/g++
          echo "PKG_CONFIG_PATH=/usr/local/opt/openblas/lib/pkgconfig" >> $GITHUB_ENV
          # Crashes  with  xcversion: command not found
          #xcversion select 14.1

      - name: Install cmake
        run: pip3 install cmake

      # Not needed as not running Jupyter
      # - name: Install Python Packages
      #   run: |
      #     python -m pip install --upgrade pip setuptools wheel
      #     # Install from requirements as there is not a python project present
      #     pip install -r requirements.txt

      - name: Set Compiler
        run: |
          echo "FC=gfortran-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV

      - name: Configure project with MPI
        run: cmake --fresh -B cmake-build-debug -DCMAKE_BUILD_TYPE=Debug -DMPI=Off
        
      - name: Build project
        run: cmake --build cmake-build-debug

      - name: Run ctest
        run: ctest --test-dir ./cmake-build-debug --output-on-failure


  # TODO Modify me as appropriate
  # gcc-build:
  #   name: Linux Build
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #       version: [10, 11, 12, 13]

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Install GCC
  #     run: |
  #       sudo add-apt-repository ppa:ubuntu-toolchain-r/test
  #       sudo apt-get update
  #       sudo apt-get install -y gcc-${{ matrix.version}} gfortran-${{ matrix.version }} g++-${{ matrix.version }}
  #       sudo apt-get install -y libblas-dev liblapack-dev
  #       sudo update-alternatives \
  #         --install /usr/bin/gcc gcc /usr/bin/gcc-${{ matrix.version }} 100 \
  #         --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${{ matrix.version }} \
  #         --slave /usr/bin/g++ g++ /usr/bin/g++-${{ matrix.version }} \
  #         --slave /usr/bin/gcov gcov /usr/bin/gcov-${{ matrix.version }}

  #   - name: Set Compiler
  #     run: |
  #       echo "FC=gfortran" >> $GITHUB_ENV
  #       echo "CC=gcc" >> $GITHUB_ENV
  #       echo "CXX=g++" >> $GITHUB_ENV

  #   - name: Build project
  #     run: gfortran blas_interface_test.f90 -lblas -llapack -o test.x
